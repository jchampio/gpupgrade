// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cli_to_hub.proto

package idl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpgradeSteps int32

const (
	UpgradeSteps_UNKNOWN_STEP           UpgradeSteps = 0
	UpgradeSteps_CONFIG                 UpgradeSteps = 1
	UpgradeSteps_START_AGENTS           UpgradeSteps = 2
	UpgradeSteps_INIT_CLUSTER           UpgradeSteps = 3
	UpgradeSteps_SHUTDOWN_CLUSTERS      UpgradeSteps = 4
	UpgradeSteps_CONVERT_MASTER         UpgradeSteps = 5
	UpgradeSteps_COPY_MASTER            UpgradeSteps = 6
	UpgradeSteps_CONVERT_PRIMARIES      UpgradeSteps = 7
	UpgradeSteps_VALIDATE_START_CLUSTER UpgradeSteps = 8
	UpgradeSteps_RECONFIGURE_PORTS      UpgradeSteps = 9
)

var UpgradeSteps_name = map[int32]string{
	0: "UNKNOWN_STEP",
	1: "CONFIG",
	2: "START_AGENTS",
	3: "INIT_CLUSTER",
	4: "SHUTDOWN_CLUSTERS",
	5: "CONVERT_MASTER",
	6: "COPY_MASTER",
	7: "CONVERT_PRIMARIES",
	8: "VALIDATE_START_CLUSTER",
	9: "RECONFIGURE_PORTS",
}
var UpgradeSteps_value = map[string]int32{
	"UNKNOWN_STEP":           0,
	"CONFIG":                 1,
	"START_AGENTS":           2,
	"INIT_CLUSTER":           3,
	"SHUTDOWN_CLUSTERS":      4,
	"CONVERT_MASTER":         5,
	"COPY_MASTER":            6,
	"CONVERT_PRIMARIES":      7,
	"VALIDATE_START_CLUSTER": 8,
	"RECONFIGURE_PORTS":      9,
}

func (x UpgradeSteps) String() string {
	return proto.EnumName(UpgradeSteps_name, int32(x))
}
func (UpgradeSteps) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{0}
}

type StepStatus int32

const (
	StepStatus_UNKNOWN_STATUS StepStatus = 0
	StepStatus_PENDING        StepStatus = 1
	StepStatus_RUNNING        StepStatus = 2
	StepStatus_COMPLETE       StepStatus = 3
	StepStatus_FAILED         StepStatus = 4
)

var StepStatus_name = map[int32]string{
	0: "UNKNOWN_STATUS",
	1: "PENDING",
	2: "RUNNING",
	3: "COMPLETE",
	4: "FAILED",
}
var StepStatus_value = map[string]int32{
	"UNKNOWN_STATUS": 0,
	"PENDING":        1,
	"RUNNING":        2,
	"COMPLETE":       3,
	"FAILED":         4,
}

func (x StepStatus) String() string {
	return proto.EnumName(StepStatus_name, int32(x))
}
func (StepStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{1}
}

type Chunk_Type int32

const (
	Chunk_UNKNOWN Chunk_Type = 0
	Chunk_STDOUT  Chunk_Type = 1
	Chunk_STDERR  Chunk_Type = 2
)

var Chunk_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDOUT",
	2: "STDERR",
}
var Chunk_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"STDOUT":  1,
	"STDERR":  2,
}

func (x Chunk_Type) String() string {
	return proto.EnumName(Chunk_Type_name, int32(x))
}
func (Chunk_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{18, 0}
}

type InitializeRequest struct {
	OldBinDir            string   `protobuf:"bytes,1,opt,name=oldBinDir" json:"oldBinDir,omitempty"`
	NewBinDir            string   `protobuf:"bytes,2,opt,name=newBinDir" json:"newBinDir,omitempty"`
	OldPort              int32    `protobuf:"varint,3,opt,name=oldPort" json:"oldPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitializeRequest) Reset()         { *m = InitializeRequest{} }
func (m *InitializeRequest) String() string { return proto.CompactTextString(m) }
func (*InitializeRequest) ProtoMessage()    {}
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{0}
}
func (m *InitializeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeRequest.Unmarshal(m, b)
}
func (m *InitializeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeRequest.Marshal(b, m, deterministic)
}
func (dst *InitializeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeRequest.Merge(dst, src)
}
func (m *InitializeRequest) XXX_Size() int {
	return xxx_messageInfo_InitializeRequest.Size(m)
}
func (m *InitializeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeRequest proto.InternalMessageInfo

func (m *InitializeRequest) GetOldBinDir() string {
	if m != nil {
		return m.OldBinDir
	}
	return ""
}

func (m *InitializeRequest) GetNewBinDir() string {
	if m != nil {
		return m.NewBinDir
	}
	return ""
}

func (m *InitializeRequest) GetOldPort() int32 {
	if m != nil {
		return m.OldPort
	}
	return 0
}

type ExecuteRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteRequest) Reset()         { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()    {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{1}
}
func (m *ExecuteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteRequest.Unmarshal(m, b)
}
func (m *ExecuteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteRequest.Marshal(b, m, deterministic)
}
func (dst *ExecuteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteRequest.Merge(dst, src)
}
func (m *ExecuteRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteRequest.Size(m)
}
func (m *ExecuteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteRequest proto.InternalMessageInfo

type FinalizeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinalizeRequest) Reset()         { *m = FinalizeRequest{} }
func (m *FinalizeRequest) String() string { return proto.CompactTextString(m) }
func (*FinalizeRequest) ProtoMessage()    {}
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{2}
}
func (m *FinalizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalizeRequest.Unmarshal(m, b)
}
func (m *FinalizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalizeRequest.Marshal(b, m, deterministic)
}
func (dst *FinalizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalizeRequest.Merge(dst, src)
}
func (m *FinalizeRequest) XXX_Size() int {
	return xxx_messageInfo_FinalizeRequest.Size(m)
}
func (m *FinalizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FinalizeRequest proto.InternalMessageInfo

type StatusConversionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusConversionRequest) Reset()         { *m = StatusConversionRequest{} }
func (m *StatusConversionRequest) String() string { return proto.CompactTextString(m) }
func (*StatusConversionRequest) ProtoMessage()    {}
func (*StatusConversionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{3}
}
func (m *StatusConversionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusConversionRequest.Unmarshal(m, b)
}
func (m *StatusConversionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusConversionRequest.Marshal(b, m, deterministic)
}
func (dst *StatusConversionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusConversionRequest.Merge(dst, src)
}
func (m *StatusConversionRequest) XXX_Size() int {
	return xxx_messageInfo_StatusConversionRequest.Size(m)
}
func (m *StatusConversionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusConversionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusConversionRequest proto.InternalMessageInfo

type PrimaryStatus struct {
	Status               StepStatus `protobuf:"varint,1,opt,name=Status,enum=idl.StepStatus" json:"Status,omitempty"`
	Dbid                 int32      `protobuf:"varint,2,opt,name=Dbid" json:"Dbid,omitempty"`
	Content              int32      `protobuf:"varint,3,opt,name=Content" json:"Content,omitempty"`
	Hostname             string     `protobuf:"bytes,4,opt,name=Hostname" json:"Hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PrimaryStatus) Reset()         { *m = PrimaryStatus{} }
func (m *PrimaryStatus) String() string { return proto.CompactTextString(m) }
func (*PrimaryStatus) ProtoMessage()    {}
func (*PrimaryStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{4}
}
func (m *PrimaryStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryStatus.Unmarshal(m, b)
}
func (m *PrimaryStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryStatus.Marshal(b, m, deterministic)
}
func (dst *PrimaryStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryStatus.Merge(dst, src)
}
func (m *PrimaryStatus) XXX_Size() int {
	return xxx_messageInfo_PrimaryStatus.Size(m)
}
func (m *PrimaryStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryStatus proto.InternalMessageInfo

func (m *PrimaryStatus) GetStatus() StepStatus {
	if m != nil {
		return m.Status
	}
	return StepStatus_UNKNOWN_STATUS
}

func (m *PrimaryStatus) GetDbid() int32 {
	if m != nil {
		return m.Dbid
	}
	return 0
}

func (m *PrimaryStatus) GetContent() int32 {
	if m != nil {
		return m.Content
	}
	return 0
}

func (m *PrimaryStatus) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type StatusConversionReply struct {
	ConversionStatuses   []*PrimaryStatus `protobuf:"bytes,1,rep,name=conversionStatuses" json:"conversionStatuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StatusConversionReply) Reset()         { *m = StatusConversionReply{} }
func (m *StatusConversionReply) String() string { return proto.CompactTextString(m) }
func (*StatusConversionReply) ProtoMessage()    {}
func (*StatusConversionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{5}
}
func (m *StatusConversionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusConversionReply.Unmarshal(m, b)
}
func (m *StatusConversionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusConversionReply.Marshal(b, m, deterministic)
}
func (dst *StatusConversionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusConversionReply.Merge(dst, src)
}
func (m *StatusConversionReply) XXX_Size() int {
	return xxx_messageInfo_StatusConversionReply.Size(m)
}
func (m *StatusConversionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusConversionReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusConversionReply proto.InternalMessageInfo

func (m *StatusConversionReply) GetConversionStatuses() []*PrimaryStatus {
	if m != nil {
		return m.ConversionStatuses
	}
	return nil
}

type StatusUpgradeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusUpgradeRequest) Reset()         { *m = StatusUpgradeRequest{} }
func (m *StatusUpgradeRequest) String() string { return proto.CompactTextString(m) }
func (*StatusUpgradeRequest) ProtoMessage()    {}
func (*StatusUpgradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{6}
}
func (m *StatusUpgradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusUpgradeRequest.Unmarshal(m, b)
}
func (m *StatusUpgradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusUpgradeRequest.Marshal(b, m, deterministic)
}
func (dst *StatusUpgradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusUpgradeRequest.Merge(dst, src)
}
func (m *StatusUpgradeRequest) XXX_Size() int {
	return xxx_messageInfo_StatusUpgradeRequest.Size(m)
}
func (m *StatusUpgradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusUpgradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusUpgradeRequest proto.InternalMessageInfo

type StatusUpgradeReply struct {
	ListOfUpgradeStepStatuses []*UpgradeStepStatus `protobuf:"bytes,1,rep,name=listOfUpgradeStepStatuses" json:"listOfUpgradeStepStatuses,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}             `json:"-"`
	XXX_unrecognized          []byte               `json:"-"`
	XXX_sizecache             int32                `json:"-"`
}

func (m *StatusUpgradeReply) Reset()         { *m = StatusUpgradeReply{} }
func (m *StatusUpgradeReply) String() string { return proto.CompactTextString(m) }
func (*StatusUpgradeReply) ProtoMessage()    {}
func (*StatusUpgradeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{7}
}
func (m *StatusUpgradeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusUpgradeReply.Unmarshal(m, b)
}
func (m *StatusUpgradeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusUpgradeReply.Marshal(b, m, deterministic)
}
func (dst *StatusUpgradeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusUpgradeReply.Merge(dst, src)
}
func (m *StatusUpgradeReply) XXX_Size() int {
	return xxx_messageInfo_StatusUpgradeReply.Size(m)
}
func (m *StatusUpgradeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusUpgradeReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusUpgradeReply proto.InternalMessageInfo

func (m *StatusUpgradeReply) GetListOfUpgradeStepStatuses() []*UpgradeStepStatus {
	if m != nil {
		return m.ListOfUpgradeStepStatuses
	}
	return nil
}

type UpgradeStepStatus struct {
	Step                 UpgradeSteps `protobuf:"varint,1,opt,name=step,enum=idl.UpgradeSteps" json:"step,omitempty"`
	Status               StepStatus   `protobuf:"varint,2,opt,name=status,enum=idl.StepStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpgradeStepStatus) Reset()         { *m = UpgradeStepStatus{} }
func (m *UpgradeStepStatus) String() string { return proto.CompactTextString(m) }
func (*UpgradeStepStatus) ProtoMessage()    {}
func (*UpgradeStepStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{8}
}
func (m *UpgradeStepStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeStepStatus.Unmarshal(m, b)
}
func (m *UpgradeStepStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeStepStatus.Marshal(b, m, deterministic)
}
func (dst *UpgradeStepStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeStepStatus.Merge(dst, src)
}
func (m *UpgradeStepStatus) XXX_Size() int {
	return xxx_messageInfo_UpgradeStepStatus.Size(m)
}
func (m *UpgradeStepStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeStepStatus.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeStepStatus proto.InternalMessageInfo

func (m *UpgradeStepStatus) GetStep() UpgradeSteps {
	if m != nil {
		return m.Step
	}
	return UpgradeSteps_UNKNOWN_STEP
}

func (m *UpgradeStepStatus) GetStatus() StepStatus {
	if m != nil {
		return m.Status
	}
	return StepStatus_UNKNOWN_STATUS
}

type CountPerDb struct {
	DbName               string   `protobuf:"bytes,1,opt,name=DbName" json:"DbName,omitempty"`
	AoCount              int32    `protobuf:"varint,2,opt,name=AoCount" json:"AoCount,omitempty"`
	HeapCount            int32    `protobuf:"varint,3,opt,name=HeapCount" json:"HeapCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountPerDb) Reset()         { *m = CountPerDb{} }
func (m *CountPerDb) String() string { return proto.CompactTextString(m) }
func (*CountPerDb) ProtoMessage()    {}
func (*CountPerDb) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{9}
}
func (m *CountPerDb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountPerDb.Unmarshal(m, b)
}
func (m *CountPerDb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountPerDb.Marshal(b, m, deterministic)
}
func (dst *CountPerDb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountPerDb.Merge(dst, src)
}
func (m *CountPerDb) XXX_Size() int {
	return xxx_messageInfo_CountPerDb.Size(m)
}
func (m *CountPerDb) XXX_DiscardUnknown() {
	xxx_messageInfo_CountPerDb.DiscardUnknown(m)
}

var xxx_messageInfo_CountPerDb proto.InternalMessageInfo

func (m *CountPerDb) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *CountPerDb) GetAoCount() int32 {
	if m != nil {
		return m.AoCount
	}
	return 0
}

func (m *CountPerDb) GetHeapCount() int32 {
	if m != nil {
		return m.HeapCount
	}
	return 0
}

type CheckObjectCountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckObjectCountRequest) Reset()         { *m = CheckObjectCountRequest{} }
func (m *CheckObjectCountRequest) String() string { return proto.CompactTextString(m) }
func (*CheckObjectCountRequest) ProtoMessage()    {}
func (*CheckObjectCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{10}
}
func (m *CheckObjectCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckObjectCountRequest.Unmarshal(m, b)
}
func (m *CheckObjectCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckObjectCountRequest.Marshal(b, m, deterministic)
}
func (dst *CheckObjectCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckObjectCountRequest.Merge(dst, src)
}
func (m *CheckObjectCountRequest) XXX_Size() int {
	return xxx_messageInfo_CheckObjectCountRequest.Size(m)
}
func (m *CheckObjectCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckObjectCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckObjectCountRequest proto.InternalMessageInfo

type CheckObjectCountReply struct {
	ListOfCounts         []*CountPerDb `protobuf:"bytes,1,rep,name=ListOfCounts" json:"ListOfCounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CheckObjectCountReply) Reset()         { *m = CheckObjectCountReply{} }
func (m *CheckObjectCountReply) String() string { return proto.CompactTextString(m) }
func (*CheckObjectCountReply) ProtoMessage()    {}
func (*CheckObjectCountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{11}
}
func (m *CheckObjectCountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckObjectCountReply.Unmarshal(m, b)
}
func (m *CheckObjectCountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckObjectCountReply.Marshal(b, m, deterministic)
}
func (dst *CheckObjectCountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckObjectCountReply.Merge(dst, src)
}
func (m *CheckObjectCountReply) XXX_Size() int {
	return xxx_messageInfo_CheckObjectCountReply.Size(m)
}
func (m *CheckObjectCountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckObjectCountReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckObjectCountReply proto.InternalMessageInfo

func (m *CheckObjectCountReply) GetListOfCounts() []*CountPerDb {
	if m != nil {
		return m.ListOfCounts
	}
	return nil
}

type CheckVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckVersionRequest) Reset()         { *m = CheckVersionRequest{} }
func (m *CheckVersionRequest) String() string { return proto.CompactTextString(m) }
func (*CheckVersionRequest) ProtoMessage()    {}
func (*CheckVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{12}
}
func (m *CheckVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckVersionRequest.Unmarshal(m, b)
}
func (m *CheckVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckVersionRequest.Marshal(b, m, deterministic)
}
func (dst *CheckVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckVersionRequest.Merge(dst, src)
}
func (m *CheckVersionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckVersionRequest.Size(m)
}
func (m *CheckVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckVersionRequest proto.InternalMessageInfo

type CheckVersionReply struct {
	IsVersionCompatible  bool     `protobuf:"varint,1,opt,name=IsVersionCompatible" json:"IsVersionCompatible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckVersionReply) Reset()         { *m = CheckVersionReply{} }
func (m *CheckVersionReply) String() string { return proto.CompactTextString(m) }
func (*CheckVersionReply) ProtoMessage()    {}
func (*CheckVersionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{13}
}
func (m *CheckVersionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckVersionReply.Unmarshal(m, b)
}
func (m *CheckVersionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckVersionReply.Marshal(b, m, deterministic)
}
func (dst *CheckVersionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckVersionReply.Merge(dst, src)
}
func (m *CheckVersionReply) XXX_Size() int {
	return xxx_messageInfo_CheckVersionReply.Size(m)
}
func (m *CheckVersionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckVersionReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckVersionReply proto.InternalMessageInfo

func (m *CheckVersionReply) GetIsVersionCompatible() bool {
	if m != nil {
		return m.IsVersionCompatible
	}
	return false
}

type CheckDiskSpaceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckDiskSpaceRequest) Reset()         { *m = CheckDiskSpaceRequest{} }
func (m *CheckDiskSpaceRequest) String() string { return proto.CompactTextString(m) }
func (*CheckDiskSpaceRequest) ProtoMessage()    {}
func (*CheckDiskSpaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{14}
}
func (m *CheckDiskSpaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDiskSpaceRequest.Unmarshal(m, b)
}
func (m *CheckDiskSpaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDiskSpaceRequest.Marshal(b, m, deterministic)
}
func (dst *CheckDiskSpaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDiskSpaceRequest.Merge(dst, src)
}
func (m *CheckDiskSpaceRequest) XXX_Size() int {
	return xxx_messageInfo_CheckDiskSpaceRequest.Size(m)
}
func (m *CheckDiskSpaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDiskSpaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDiskSpaceRequest proto.InternalMessageInfo

type CheckDiskSpaceReply struct {
	SegmentFileSysUsage  []string `protobuf:"bytes,1,rep,name=SegmentFileSysUsage" json:"SegmentFileSysUsage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckDiskSpaceReply) Reset()         { *m = CheckDiskSpaceReply{} }
func (m *CheckDiskSpaceReply) String() string { return proto.CompactTextString(m) }
func (*CheckDiskSpaceReply) ProtoMessage()    {}
func (*CheckDiskSpaceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{15}
}
func (m *CheckDiskSpaceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckDiskSpaceReply.Unmarshal(m, b)
}
func (m *CheckDiskSpaceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckDiskSpaceReply.Marshal(b, m, deterministic)
}
func (dst *CheckDiskSpaceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDiskSpaceReply.Merge(dst, src)
}
func (m *CheckDiskSpaceReply) XXX_Size() int {
	return xxx_messageInfo_CheckDiskSpaceReply.Size(m)
}
func (m *CheckDiskSpaceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDiskSpaceReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDiskSpaceReply proto.InternalMessageInfo

func (m *CheckDiskSpaceReply) GetSegmentFileSysUsage() []string {
	if m != nil {
		return m.SegmentFileSysUsage
	}
	return nil
}

type PrepareInitClusterRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareInitClusterRequest) Reset()         { *m = PrepareInitClusterRequest{} }
func (m *PrepareInitClusterRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareInitClusterRequest) ProtoMessage()    {}
func (*PrepareInitClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{16}
}
func (m *PrepareInitClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareInitClusterRequest.Unmarshal(m, b)
}
func (m *PrepareInitClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareInitClusterRequest.Marshal(b, m, deterministic)
}
func (dst *PrepareInitClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareInitClusterRequest.Merge(dst, src)
}
func (m *PrepareInitClusterRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareInitClusterRequest.Size(m)
}
func (m *PrepareInitClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareInitClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareInitClusterRequest proto.InternalMessageInfo

type PrepareInitClusterReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareInitClusterReply) Reset()         { *m = PrepareInitClusterReply{} }
func (m *PrepareInitClusterReply) String() string { return proto.CompactTextString(m) }
func (*PrepareInitClusterReply) ProtoMessage()    {}
func (*PrepareInitClusterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{17}
}
func (m *PrepareInitClusterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareInitClusterReply.Unmarshal(m, b)
}
func (m *PrepareInitClusterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareInitClusterReply.Marshal(b, m, deterministic)
}
func (dst *PrepareInitClusterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareInitClusterReply.Merge(dst, src)
}
func (m *PrepareInitClusterReply) XXX_Size() int {
	return xxx_messageInfo_PrepareInitClusterReply.Size(m)
}
func (m *PrepareInitClusterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareInitClusterReply.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareInitClusterReply proto.InternalMessageInfo

type Chunk struct {
	Buffer               []byte     `protobuf:"bytes,1,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Type                 Chunk_Type `protobuf:"varint,2,opt,name=type,enum=idl.Chunk_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{18}
}
func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (dst *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(dst, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetBuffer() []byte {
	if m != nil {
		return m.Buffer
	}
	return nil
}

func (m *Chunk) GetType() Chunk_Type {
	if m != nil {
		return m.Type
	}
	return Chunk_UNKNOWN
}

type Message struct {
	// Types that are valid to be assigned to Contents:
	//	*Message_Chunk
	//	*Message_Status
	Contents             isMessage_Contents `protobuf_oneof:"contents"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{19}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Contents interface {
	isMessage_Contents()
}

type Message_Chunk struct {
	Chunk *Chunk `protobuf:"bytes,1,opt,name=chunk,oneof"`
}
type Message_Status struct {
	Status *UpgradeStepStatus `protobuf:"bytes,2,opt,name=status,oneof"`
}

func (*Message_Chunk) isMessage_Contents()  {}
func (*Message_Status) isMessage_Contents() {}

func (m *Message) GetContents() isMessage_Contents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *Message) GetChunk() *Chunk {
	if x, ok := m.GetContents().(*Message_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (m *Message) GetStatus() *UpgradeStepStatus {
	if x, ok := m.GetContents().(*Message_Status); ok {
		return x.Status
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Chunk)(nil),
		(*Message_Status)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// contents
	switch x := m.Contents.(type) {
	case *Message_Chunk:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chunk); err != nil {
			return err
		}
	case *Message_Status:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Contents has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 1: // contents.chunk
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Chunk)
		err := b.DecodeMessage(msg)
		m.Contents = &Message_Chunk{msg}
		return true, err
	case 2: // contents.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpgradeStepStatus)
		err := b.DecodeMessage(msg)
		m.Contents = &Message_Status{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// contents
	switch x := m.Contents.(type) {
	case *Message_Chunk:
		s := proto.Size(x.Chunk)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Status:
		s := proto.Size(x.Status)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SetConfigRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{20}
}
func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (dst *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(dst, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SetConfigRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SetConfigReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigReply) Reset()         { *m = SetConfigReply{} }
func (m *SetConfigReply) String() string { return proto.CompactTextString(m) }
func (*SetConfigReply) ProtoMessage()    {}
func (*SetConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{21}
}
func (m *SetConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigReply.Unmarshal(m, b)
}
func (m *SetConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigReply.Marshal(b, m, deterministic)
}
func (dst *SetConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigReply.Merge(dst, src)
}
func (m *SetConfigReply) XXX_Size() int {
	return xxx_messageInfo_SetConfigReply.Size(m)
}
func (m *SetConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigReply proto.InternalMessageInfo

type GetConfigRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{22}
}
func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (dst *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(dst, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

func (m *GetConfigRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetConfigReply struct {
	Value                string   `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigReply) Reset()         { *m = GetConfigReply{} }
func (m *GetConfigReply) String() string { return proto.CompactTextString(m) }
func (*GetConfigReply) ProtoMessage()    {}
func (*GetConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_to_hub_db9d63f84b8068f8, []int{23}
}
func (m *GetConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigReply.Unmarshal(m, b)
}
func (m *GetConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigReply.Marshal(b, m, deterministic)
}
func (dst *GetConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigReply.Merge(dst, src)
}
func (m *GetConfigReply) XXX_Size() int {
	return xxx_messageInfo_GetConfigReply.Size(m)
}
func (m *GetConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigReply proto.InternalMessageInfo

func (m *GetConfigReply) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*InitializeRequest)(nil), "idl.InitializeRequest")
	proto.RegisterType((*ExecuteRequest)(nil), "idl.ExecuteRequest")
	proto.RegisterType((*FinalizeRequest)(nil), "idl.FinalizeRequest")
	proto.RegisterType((*StatusConversionRequest)(nil), "idl.StatusConversionRequest")
	proto.RegisterType((*PrimaryStatus)(nil), "idl.PrimaryStatus")
	proto.RegisterType((*StatusConversionReply)(nil), "idl.StatusConversionReply")
	proto.RegisterType((*StatusUpgradeRequest)(nil), "idl.StatusUpgradeRequest")
	proto.RegisterType((*StatusUpgradeReply)(nil), "idl.StatusUpgradeReply")
	proto.RegisterType((*UpgradeStepStatus)(nil), "idl.UpgradeStepStatus")
	proto.RegisterType((*CountPerDb)(nil), "idl.CountPerDb")
	proto.RegisterType((*CheckObjectCountRequest)(nil), "idl.CheckObjectCountRequest")
	proto.RegisterType((*CheckObjectCountReply)(nil), "idl.CheckObjectCountReply")
	proto.RegisterType((*CheckVersionRequest)(nil), "idl.CheckVersionRequest")
	proto.RegisterType((*CheckVersionReply)(nil), "idl.CheckVersionReply")
	proto.RegisterType((*CheckDiskSpaceRequest)(nil), "idl.CheckDiskSpaceRequest")
	proto.RegisterType((*CheckDiskSpaceReply)(nil), "idl.CheckDiskSpaceReply")
	proto.RegisterType((*PrepareInitClusterRequest)(nil), "idl.PrepareInitClusterRequest")
	proto.RegisterType((*PrepareInitClusterReply)(nil), "idl.PrepareInitClusterReply")
	proto.RegisterType((*Chunk)(nil), "idl.Chunk")
	proto.RegisterType((*Message)(nil), "idl.Message")
	proto.RegisterType((*SetConfigRequest)(nil), "idl.SetConfigRequest")
	proto.RegisterType((*SetConfigReply)(nil), "idl.SetConfigReply")
	proto.RegisterType((*GetConfigRequest)(nil), "idl.GetConfigRequest")
	proto.RegisterType((*GetConfigReply)(nil), "idl.GetConfigReply")
	proto.RegisterEnum("idl.UpgradeSteps", UpgradeSteps_name, UpgradeSteps_value)
	proto.RegisterEnum("idl.StepStatus", StepStatus_name, StepStatus_value)
	proto.RegisterEnum("idl.Chunk_Type", Chunk_Type_name, Chunk_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CliToHub service

type CliToHubClient interface {
	StatusUpgrade(ctx context.Context, in *StatusUpgradeRequest, opts ...grpc.CallOption) (*StatusUpgradeReply, error)
	StatusConversion(ctx context.Context, in *StatusConversionRequest, opts ...grpc.CallOption) (*StatusConversionReply, error)
	CheckObjectCount(ctx context.Context, in *CheckObjectCountRequest, opts ...grpc.CallOption) (*CheckObjectCountReply, error)
	CheckVersion(ctx context.Context, in *CheckVersionRequest, opts ...grpc.CallOption) (*CheckVersionReply, error)
	CheckDiskSpace(ctx context.Context, in *CheckDiskSpaceRequest, opts ...grpc.CallOption) (*CheckDiskSpaceReply, error)
	Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (CliToHub_InitializeClient, error)
	Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (CliToHub_ExecuteClient, error)
	Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (CliToHub_FinalizeClient, error)
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigReply, error)
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigReply, error)
}

type cliToHubClient struct {
	cc *grpc.ClientConn
}

func NewCliToHubClient(cc *grpc.ClientConn) CliToHubClient {
	return &cliToHubClient{cc}
}

func (c *cliToHubClient) StatusUpgrade(ctx context.Context, in *StatusUpgradeRequest, opts ...grpc.CallOption) (*StatusUpgradeReply, error) {
	out := new(StatusUpgradeReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/StatusUpgrade", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cliToHubClient) StatusConversion(ctx context.Context, in *StatusConversionRequest, opts ...grpc.CallOption) (*StatusConversionReply, error) {
	out := new(StatusConversionReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/StatusConversion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cliToHubClient) CheckObjectCount(ctx context.Context, in *CheckObjectCountRequest, opts ...grpc.CallOption) (*CheckObjectCountReply, error) {
	out := new(CheckObjectCountReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/CheckObjectCount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cliToHubClient) CheckVersion(ctx context.Context, in *CheckVersionRequest, opts ...grpc.CallOption) (*CheckVersionReply, error) {
	out := new(CheckVersionReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/CheckVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cliToHubClient) CheckDiskSpace(ctx context.Context, in *CheckDiskSpaceRequest, opts ...grpc.CallOption) (*CheckDiskSpaceReply, error) {
	out := new(CheckDiskSpaceReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/CheckDiskSpace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cliToHubClient) Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (CliToHub_InitializeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_CliToHub_serviceDesc.Streams[0], c.cc, "/idl.CliToHub/Initialize", opts...)
	if err != nil {
		return nil, err
	}
	x := &cliToHubInitializeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CliToHub_InitializeClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type cliToHubInitializeClient struct {
	grpc.ClientStream
}

func (x *cliToHubInitializeClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cliToHubClient) Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (CliToHub_ExecuteClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_CliToHub_serviceDesc.Streams[1], c.cc, "/idl.CliToHub/Execute", opts...)
	if err != nil {
		return nil, err
	}
	x := &cliToHubExecuteClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CliToHub_ExecuteClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type cliToHubExecuteClient struct {
	grpc.ClientStream
}

func (x *cliToHubExecuteClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cliToHubClient) Finalize(ctx context.Context, in *FinalizeRequest, opts ...grpc.CallOption) (CliToHub_FinalizeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_CliToHub_serviceDesc.Streams[2], c.cc, "/idl.CliToHub/Finalize", opts...)
	if err != nil {
		return nil, err
	}
	x := &cliToHubFinalizeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CliToHub_FinalizeClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type cliToHubFinalizeClient struct {
	grpc.ClientStream
}

func (x *cliToHubFinalizeClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cliToHubClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigReply, error) {
	out := new(SetConfigReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/SetConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cliToHubClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigReply, error) {
	out := new(GetConfigReply)
	err := grpc.Invoke(ctx, "/idl.CliToHub/GetConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CliToHub service

type CliToHubServer interface {
	StatusUpgrade(context.Context, *StatusUpgradeRequest) (*StatusUpgradeReply, error)
	StatusConversion(context.Context, *StatusConversionRequest) (*StatusConversionReply, error)
	CheckObjectCount(context.Context, *CheckObjectCountRequest) (*CheckObjectCountReply, error)
	CheckVersion(context.Context, *CheckVersionRequest) (*CheckVersionReply, error)
	CheckDiskSpace(context.Context, *CheckDiskSpaceRequest) (*CheckDiskSpaceReply, error)
	Initialize(*InitializeRequest, CliToHub_InitializeServer) error
	Execute(*ExecuteRequest, CliToHub_ExecuteServer) error
	Finalize(*FinalizeRequest, CliToHub_FinalizeServer) error
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigReply, error)
	GetConfig(context.Context, *GetConfigRequest) (*GetConfigReply, error)
}

func RegisterCliToHubServer(s *grpc.Server, srv CliToHubServer) {
	s.RegisterService(&_CliToHub_serviceDesc, srv)
}

func _CliToHub_StatusUpgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusUpgradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).StatusUpgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/StatusUpgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).StatusUpgrade(ctx, req.(*StatusUpgradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CliToHub_StatusConversion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusConversionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).StatusConversion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/StatusConversion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).StatusConversion(ctx, req.(*StatusConversionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CliToHub_CheckObjectCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckObjectCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).CheckObjectCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/CheckObjectCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).CheckObjectCount(ctx, req.(*CheckObjectCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CliToHub_CheckVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).CheckVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/CheckVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).CheckVersion(ctx, req.(*CheckVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CliToHub_CheckDiskSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckDiskSpaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).CheckDiskSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/CheckDiskSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).CheckDiskSpace(ctx, req.(*CheckDiskSpaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CliToHub_Initialize_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InitializeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CliToHubServer).Initialize(m, &cliToHubInitializeServer{stream})
}

type CliToHub_InitializeServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type cliToHubInitializeServer struct {
	grpc.ServerStream
}

func (x *cliToHubInitializeServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _CliToHub_Execute_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExecuteRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CliToHubServer).Execute(m, &cliToHubExecuteServer{stream})
}

type CliToHub_ExecuteServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type cliToHubExecuteServer struct {
	grpc.ServerStream
}

func (x *cliToHubExecuteServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _CliToHub_Finalize_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FinalizeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CliToHubServer).Finalize(m, &cliToHubFinalizeServer{stream})
}

type CliToHub_FinalizeServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type cliToHubFinalizeServer struct {
	grpc.ServerStream
}

func (x *cliToHubFinalizeServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _CliToHub_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CliToHub_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliToHubServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.CliToHub/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliToHubServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CliToHub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "idl.CliToHub",
	HandlerType: (*CliToHubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StatusUpgrade",
			Handler:    _CliToHub_StatusUpgrade_Handler,
		},
		{
			MethodName: "StatusConversion",
			Handler:    _CliToHub_StatusConversion_Handler,
		},
		{
			MethodName: "CheckObjectCount",
			Handler:    _CliToHub_CheckObjectCount_Handler,
		},
		{
			MethodName: "CheckVersion",
			Handler:    _CliToHub_CheckVersion_Handler,
		},
		{
			MethodName: "CheckDiskSpace",
			Handler:    _CliToHub_CheckDiskSpace_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _CliToHub_SetConfig_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _CliToHub_GetConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Initialize",
			Handler:       _CliToHub_Initialize_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Execute",
			Handler:       _CliToHub_Execute_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Finalize",
			Handler:       _CliToHub_Finalize_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cli_to_hub.proto",
}

func init() { proto.RegisterFile("cli_to_hub.proto", fileDescriptor_cli_to_hub_db9d63f84b8068f8) }

var fileDescriptor_cli_to_hub_db9d63f84b8068f8 = []byte{
	// 1045 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x6e, 0xe2, 0x46,
	0x14, 0x86, 0x04, 0x02, 0x9c, 0xb0, 0xc4, 0x9c, 0xfc, 0x11, 0xba, 0x17, 0x2b, 0x57, 0xdd, 0x46,
	0x5b, 0x29, 0x8a, 0xb2, 0x52, 0xa5, 0x95, 0x7a, 0x43, 0x8c, 0x03, 0xa8, 0xc4, 0xa0, 0xb1, 0x49,
	0x55, 0xb5, 0x12, 0x32, 0x30, 0x49, 0xbc, 0x71, 0x6c, 0xaf, 0x6d, 0xb6, 0xa5, 0x97, 0x7d, 0x85,
	0xbe, 0x5b, 0x9f, 0xa7, 0x9a, 0x1f, 0x03, 0x06, 0x23, 0xf5, 0xce, 0xf3, 0x7d, 0xe7, 0xff, 0x9c,
	0x39, 0x1e, 0x50, 0xa6, 0xae, 0x33, 0x8e, 0xfd, 0xf1, 0xf3, 0x7c, 0x72, 0x15, 0x84, 0x7e, 0xec,
	0xe3, 0xbe, 0x33, 0x73, 0x55, 0x07, 0xea, 0x3d, 0xcf, 0x89, 0x1d, 0xdb, 0x75, 0xfe, 0xa2, 0x84,
	0x7e, 0x99, 0xd3, 0x28, 0xc6, 0xb7, 0x50, 0xf1, 0xdd, 0xd9, 0xad, 0xe3, 0xb5, 0x9d, 0xb0, 0x91,
	0x7f, 0x97, 0xbf, 0xac, 0x90, 0x15, 0xc0, 0x58, 0x8f, 0xfe, 0x21, 0xd9, 0x3d, 0xc1, 0x2e, 0x01,
	0x6c, 0x40, 0xc9, 0x77, 0x67, 0x43, 0x3f, 0x8c, 0x1b, 0xfb, 0xef, 0xf2, 0x97, 0x45, 0x92, 0x1c,
	0x55, 0x05, 0x6a, 0xfa, 0x9f, 0x74, 0x3a, 0x8f, 0x13, 0x3f, 0x6a, 0x1d, 0x8e, 0xee, 0x1c, 0x6f,
	0xdd, 0xb5, 0x7a, 0x01, 0xe7, 0x66, 0x6c, 0xc7, 0xf3, 0x48, 0xf3, 0xbd, 0xaf, 0x34, 0x8c, 0x1c,
	0xdf, 0x4b, 0xa8, 0xbf, 0xf3, 0xf0, 0x66, 0x18, 0x3a, 0xaf, 0x76, 0xb8, 0x10, 0x22, 0xf8, 0x3d,
	0x1c, 0x88, 0x2f, 0x1e, 0x64, 0xed, 0xe6, 0xe8, 0xca, 0x99, 0xb9, 0x57, 0x66, 0x4c, 0x03, 0x01,
	0x13, 0x49, 0x23, 0x42, 0xa1, 0x3d, 0x71, 0x66, 0x3c, 0xda, 0x22, 0xe1, 0xdf, 0x2c, 0x50, 0xcd,
	0xf7, 0x62, 0xea, 0x2d, 0x03, 0x95, 0x47, 0x6c, 0x42, 0xb9, 0xeb, 0x47, 0xb1, 0x67, 0xbf, 0xd2,
	0x46, 0x81, 0xe7, 0xb7, 0x3c, 0xab, 0xbf, 0xc1, 0xe9, 0x76, 0x7c, 0x81, 0xbb, 0xc0, 0x5b, 0xc0,
	0xe9, 0x12, 0x12, 0x22, 0x94, 0xc5, 0xb5, 0x7f, 0x79, 0x78, 0x83, 0x3c, 0xae, 0x54, 0xec, 0x24,
	0x43, 0x5a, 0x3d, 0x83, 0x13, 0xf1, 0x3d, 0x0a, 0x9e, 0x42, 0x7b, 0xb6, 0x2c, 0xca, 0x67, 0xc0,
	0x0d, 0x9c, 0x79, 0xb4, 0xe0, 0xc2, 0x75, 0xa2, 0x78, 0xf0, 0x28, 0xd1, 0x55, 0xde, 0x4b, 0xc7,
	0x67, 0xdc, 0xf1, 0x16, 0x4f, 0x76, 0x2b, 0xaa, 0x53, 0xa8, 0x6f, 0xc1, 0xf8, 0x1d, 0x14, 0xa2,
	0x98, 0x06, 0xb2, 0xcc, 0xf5, 0x4d, 0xab, 0x11, 0xe1, 0x34, 0xeb, 0x47, 0x24, 0xfa, 0xb1, 0xb7,
	0xa3, 0x1f, 0x82, 0x56, 0x7f, 0x07, 0xd0, 0xfc, 0xb9, 0x17, 0x0f, 0x69, 0xd8, 0x9e, 0xe0, 0x19,
	0x1c, 0xb4, 0x27, 0x06, 0xab, 0xb6, 0x98, 0x35, 0x79, 0x62, 0x1d, 0x6a, 0xf9, 0x5c, 0x4e, 0x36,
	0x2e, 0x39, 0xb2, 0x11, 0xec, 0x52, 0x3b, 0x10, 0x9c, 0xe8, 0xde, 0x0a, 0x60, 0x33, 0xa4, 0x3d,
	0xd3, 0xe9, 0xcb, 0x60, 0xf2, 0x99, 0x4e, 0x63, 0x8e, 0x25, 0x95, 0xec, 0xc3, 0xe9, 0x36, 0xc5,
	0x8a, 0xf9, 0x11, 0xaa, 0x7d, 0x5e, 0x13, 0x8e, 0x25, 0xf5, 0x13, 0x09, 0xac, 0x42, 0x25, 0x29,
	0x21, 0xf5, 0x14, 0x8e, 0xb9, 0xb5, 0x87, 0xf4, 0xa0, 0xea, 0x50, 0x4f, 0xc3, 0xcc, 0xc1, 0x35,
	0x1c, 0xf7, 0x22, 0x89, 0x68, 0xfe, 0x6b, 0x60, 0xc7, 0xce, 0xc4, 0x15, 0x19, 0x97, 0x49, 0x16,
	0xa5, 0x9e, 0xcb, 0x58, 0xdb, 0x4e, 0xf4, 0x62, 0x06, 0xf6, 0x74, 0x39, 0x0e, 0x1d, 0xe9, 0x76,
	0x8d, 0x90, 0x1e, 0x4c, 0xfa, 0xf4, 0x4a, 0xbd, 0xf8, 0xce, 0x71, 0xa9, 0xb9, 0x88, 0x46, 0x91,
	0xfd, 0x44, 0x79, 0x26, 0x15, 0x92, 0x45, 0xa9, 0xdf, 0xc0, 0xc5, 0x30, 0xa4, 0x81, 0x1d, 0x52,
	0xb6, 0x03, 0x34, 0x77, 0x1e, 0xc5, 0x34, 0x5c, 0xbb, 0x89, 0x59, 0x64, 0xe0, 0x2e, 0xd4, 0x2f,
	0x50, 0xd4, 0x9e, 0xe7, 0xde, 0x0b, 0xeb, 0xdc, 0x64, 0xfe, 0xf8, 0x48, 0xc5, 0x96, 0xa8, 0x12,
	0x79, 0xc2, 0x6f, 0xa1, 0x10, 0x2f, 0x02, 0x9a, 0x1a, 0x03, 0xae, 0x71, 0x65, 0x2d, 0x02, 0x4a,
	0x38, 0xa9, 0xfe, 0x00, 0x05, 0x76, 0xc2, 0x43, 0x28, 0x8d, 0x8c, 0x9f, 0x8d, 0xc1, 0x2f, 0x86,
	0x92, 0x43, 0x80, 0x03, 0xd3, 0x6a, 0x0f, 0x46, 0x96, 0x92, 0x97, 0xdf, 0x3a, 0x21, 0xca, 0x9e,
	0xfa, 0x02, 0xa5, 0x7b, 0x1a, 0xb1, 0xa8, 0x51, 0x85, 0xe2, 0x94, 0xd9, 0xe2, 0x3e, 0x0f, 0x6f,
	0x60, 0x65, 0xbd, 0x9b, 0x23, 0x82, 0xc2, 0xeb, 0xd4, 0x24, 0xee, 0xbc, 0x08, 0xdd, 0x5c, 0x32,
	0x92, 0xb7, 0x00, 0xe5, 0xa9, 0xb8, 0xff, 0x91, 0xfa, 0x13, 0x28, 0x26, 0x8d, 0x35, 0xdf, 0x7b,
	0x74, 0x9e, 0x92, 0x9d, 0x88, 0x50, 0xf0, 0x56, 0x23, 0xca, 0xbf, 0xf1, 0x04, 0x8a, 0x5f, 0x6d,
	0x77, 0x4e, 0xe5, 0x16, 0x14, 0x07, 0xb6, 0xe7, 0xd6, 0xb4, 0x59, 0xbd, 0xde, 0x83, 0xd2, 0xf9,
	0x1f, 0xf6, 0xd4, 0xf7, 0x50, 0xeb, 0xa4, 0x34, 0x57, 0x1e, 0xf2, 0x6b, 0x1e, 0x3e, 0xfc, 0x9b,
	0x87, 0xea, 0xfa, 0xf5, 0x43, 0x05, 0xaa, 0xb2, 0x84, 0x63, 0xd3, 0xd2, 0x87, 0xa2, 0x8e, 0xda,
	0xc0, 0xb8, 0xeb, 0x75, 0x94, 0x3c, 0x63, 0x4d, 0xab, 0x45, 0xac, 0x71, 0xab, 0xa3, 0x1b, 0x96,
	0xa9, 0xec, 0x31, 0xa4, 0x67, 0xf4, 0xac, 0xb1, 0xd6, 0x1f, 0x99, 0x96, 0x4e, 0x94, 0x7d, 0x3c,
	0x85, 0xba, 0xd9, 0x1d, 0x59, 0x6d, 0x66, 0x42, 0xa2, 0xa6, 0x52, 0x40, 0x84, 0x9a, 0x36, 0x30,
	0x1e, 0x74, 0x62, 0x8d, 0xef, 0x5b, 0x5c, 0xb4, 0x88, 0x47, 0x70, 0xa8, 0x0d, 0x86, 0xbf, 0x26,
	0xc0, 0x01, 0xd3, 0x4d, 0x84, 0x86, 0xa4, 0x77, 0xdf, 0x22, 0x3d, 0xdd, 0x54, 0x4a, 0xd8, 0x84,
	0xb3, 0x87, 0x56, 0xbf, 0xd7, 0x6e, 0x59, 0xfa, 0x58, 0xf8, 0x4f, 0xdc, 0x95, 0x99, 0x0a, 0xd1,
	0x45, 0x80, 0x23, 0xa2, 0x8f, 0x87, 0x03, 0x62, 0x99, 0x4a, 0xe5, 0x83, 0x05, 0xb0, 0xb6, 0x75,
	0x10, 0x6a, 0xab, 0xac, 0x5a, 0xd6, 0xc8, 0x54, 0x72, 0x6c, 0x58, 0x86, 0xba, 0xd1, 0xee, 0x19,
	0x2c, 0xb1, 0x43, 0x28, 0x91, 0x91, 0x61, 0xb0, 0xc3, 0x1e, 0x56, 0xa1, 0xac, 0x0d, 0xee, 0x87,
	0x7d, 0xdd, 0xd2, 0x95, 0x7d, 0x96, 0xff, 0x5d, 0xab, 0xd7, 0xd7, 0xdb, 0x4a, 0xe1, 0xe6, 0x9f,
	0x22, 0x94, 0x35, 0xd7, 0xb1, 0xfc, 0xee, 0x7c, 0x82, 0x3a, 0xbc, 0x49, 0xed, 0x52, 0xbc, 0x90,
	0x4b, 0x6a, 0x7b, 0xef, 0x36, 0xcf, 0xb3, 0x28, 0xd6, 0xd0, 0x1c, 0x1a, 0xa0, 0x6c, 0xfe, 0x07,
	0xf0, 0xed, 0x9a, 0xf8, 0xd6, 0xef, 0xab, 0xd9, 0xdc, 0xc1, 0x2e, 0xed, 0x6d, 0x2e, 0x26, 0x69,
	0x6f, 0xc7, 0x2a, 0x93, 0xf6, 0x32, 0xb7, 0x99, 0x9a, 0xc3, 0x5b, 0xa8, 0xae, 0xef, 0x20, 0x6c,
	0xac, 0xa4, 0xd3, 0xdb, 0xaa, 0x79, 0x96, 0xc1, 0x08, 0x1b, 0x5d, 0xa8, 0xa5, 0xf7, 0x0c, 0xae,
	0xf9, 0xdc, 0xdc, 0x4a, 0xcd, 0x46, 0x26, 0x27, 0x2c, 0xfd, 0x08, 0xb0, 0x7a, 0x65, 0xa0, 0xf0,
	0xb8, 0xf5, 0xec, 0x68, 0x56, 0x39, 0x2e, 0xaf, 0xb9, 0x9a, 0xbb, 0xce, 0xe3, 0x35, 0x94, 0xe4,
	0x93, 0x01, 0x8f, 0x39, 0x99, 0x7e, 0x40, 0x64, 0x68, 0xdc, 0x40, 0x39, 0x79, 0x52, 0xe0, 0x09,
	0x67, 0x37, 0x5e, 0x18, 0x19, 0x3a, 0x9f, 0xa0, 0xb2, 0xbc, 0xb0, 0x78, 0x2a, 0xda, 0xb4, 0x71,
	0x5d, 0x9b, 0xc7, 0x9b, 0xb0, 0x48, 0xec, 0x13, 0x54, 0x3a, 0x1b, 0xaa, 0x9d, 0x6c, 0xd5, 0xce,
	0x86, 0xea, 0xe4, 0x80, 0xbf, 0xc2, 0x3e, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xba, 0x46,
	0x65, 0x99, 0x09, 0x00, 0x00,
}
