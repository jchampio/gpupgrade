syntax = "proto3";

package idl;

service CliToHub {
    rpc CheckVersion (CheckVersionRequest) returns (CheckVersionReply) {}
    rpc CheckDiskSpace (CheckDiskSpaceRequest) returns (CheckDiskSpaceReply) {}
    rpc Initialize(InitializeRequest) returns (stream Message) {}
    rpc InitializeCreateCluster(InitializeCreateClusterRequest) returns (stream Message) {}
    rpc Execute(ExecuteRequest) returns (stream Message) {}
    rpc Finalize(FinalizeRequest) returns (stream Message) {}
    rpc SetConfig (SetConfigRequest) returns (SetConfigReply) {}
    rpc GetConfig (GetConfigRequest) returns (GetConfigReply) {}
    rpc RestartAgents(RestartAgentsRequest) returns (RestartAgentsReply) {}
    rpc StopServices(StopServicesRequest) returns (StopServicesReply) {}
}

message InitializeRequest {
    string oldBinDir = 1;
    string newBinDir = 2;
    int32 oldPort = 3;
}
message InitializeCreateClusterRequest {
    repeated uint32 ports = 1;
}
message ExecuteRequest {}
message FinalizeRequest {}

message RestartAgentsRequest {}
message RestartAgentsReply {
    repeated string agentHosts = 1;
}

message StopServicesRequest {}
message StopServicesReply {}

message UpgradeStepStatus {
    UpgradeSteps step = 1;
    StepStatus status = 2;
}

enum UpgradeSteps {
    UNKNOWN_STEP = 0; // http://androiddevblog.com/protocol-buffers-pitfall-adding-enum-values/
    CONFIG = 1;
    START_AGENTS = 2;
    CREATE_TARGET_CONFIG = 3;
    SHUTDOWN_SOURCE_CLUSTER = 4;
    INIT_TARGET_CLUSTER = 5;
    SHUTDOWN_TARGET_CLUSTER = 6;
    CHECK_UPGRADE = 7;
    UPGRADE_MASTER = 8;
    COPY_MASTER = 9;
    UPGRADE_PRIMARIES = 10;
    START_TARGET_CLUSTER = 11;
    RECONFIGURE_PORTS = 12;
}

enum StepStatus {
    UNKNOWN_STATUS = 0; // http://androiddevblog.com/protocol-buffers-pitfall-adding-enum-values/
    PENDING = 1;
    RUNNING = 2;
    COMPLETE = 3;
    FAILED = 4;
    SKIPPED = 5;
}

message CheckVersionRequest {}

message CheckVersionReply {
    bool IsVersionCompatible = 1;
}

message CheckDiskSpaceRequest {
  double ratio = 1;
}

message CheckDiskSpaceReply {
  message DiskUsage {
    uint64 available = 1;
    uint64 required = 2;
  }
  map<string, DiskUsage> failed = 1;
}

message PrepareInitClusterRequest {}
message PrepareInitClusterReply {}

message Chunk {
  bytes buffer = 1;
  enum Type {
    UNKNOWN = 0;
    STDOUT = 1;
    STDERR = 2;
  }
  Type type = 2;
}

message Message {
  oneof contents {
    Chunk chunk = 1;
    UpgradeStepStatus status = 2;
  }
}

message SetConfigRequest {
    string name = 1;
    string value = 2;
}
message SetConfigReply {}

message GetConfigRequest {
    string name = 1;
}
message GetConfigReply {
    string value = 1;
}
